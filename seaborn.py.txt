import seaborn as sb
import numpy as np
from matplotlib import pyplot as plt

# 1 - Loading a dataset
df = sb.load_dataset('tips')
print(df.head())

# 2 - Fetching dataset names
print(sb.get_dataset_names())

# 3- Drawing sine wave by removing axes spine
def sinplot(flip=1):
    x = np.linspace(0, 14, 100)
    for i in range(1, 5):
        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)
    sb.set_style("white")
    sb.despine()
    plt.show()

sinplot()

# 4 - The grid overpowering the graph
def sinplot(flip=1):
    x = np.linspace(0, 14, 100)
    for i in range(1, 5):
        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)
    sb.set_style("darkgrid", {'axes.axisbelow': False})
    sb.despine()
    plt.show()

sinplot()

# Drawing a color palette
current_palette = sb.color_palette()
sb.palplot(current_palette)
plt.show()

# Histogram
df = sb.load_dataset('iris')
sb.distplot(df['petal_length'], kde=False)
plt.show()

# Scattered value
df = sb.load_dataset('iris')
sb.jointplot(x='petal_length', y='petal_width', data=df)
plt.show()

# Hexbin plot
df = sb.load_dataset('iris')
sb.jointplot(x='petal_length', y='petal_width', data=df, kind='hex')
plt.show()

# Kernel density estimation
df = sb.load_dataset('iris')
sb.jointplot(x='petal_length', y='petal_width', data=df, kind='hex')
plt.show()

# Pair grid
df = sb.load_dataset('iris')
g = sb.PairGrid(df)
g.map(plt.scatter)
plt.show()
